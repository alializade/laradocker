version: '3'
services:
  nginx:
    build:
      context: ./dockerfiles
      dockerfile: ./nginx/Dockerfile
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - ./api:/home/api/public_html
      - ./web:/home/node/public_html
    depends_on:
      - php
      - web
      - mysql
    networks:
      - private_net

  mysql:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - private_net

  php:
    build:
      context: ./dockerfiles
      dockerfile: ./php/Dockerfile
    volumes:
      - ./api:/home/api/public_html
    networks:
      - private_net

  web:
    build:
      context: ./dockerfiles
      dockerfile: ./web/Dockerfile
    volumes:
      - ./web:/home/node/public_html
    networks:
      - private_net

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - private_net

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer/Dockerfile
    container_name: composer
    volumes:
      - ./api:/app
    working_dir: /app
    depends_on:
      - php
    user: composer
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - private_net

  npm:
    image: BASE_NAME_web
    volumes:
      - ./api:/app/api
      - ./web:/app/web
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /app/web
    entrypoint: ['npm']
    networks:
      - private_net

  artisan:
    image: BASE_NAME_php
    volumes:
      - ./api:/app
    depends_on:
      - mysql
    working_dir: /app
    entrypoint: ['php', '/app/artisan']
    networks:
      - private_net

  git:
    image: alpine/git
    volumes:
    - $HOME/.ssh:/root/.ssh
    - ./:/git
    working_dir: /git
    networks:
      - private_net

networks:
  private_net:
    driver: bridge
